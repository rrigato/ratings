---
AWSTemplateFormatVersion: '2010-09-09'

#Transforms any serverless code to cloudformation
Transform: AWS::Serverless-2016-10-31

Description: |
  Lambda function that updates dynamodb table from
  templates/ratings_backend.yml

Parameters:
  BucketName:
    Type: String
    Default: source-code

  DynamoDbTableName:
    Type: String
    Default: dev_toonami_ratings

  environPrefix:
    Type: String
    Default: dev

  EnableLambdaSchedule:
    Type: String
    Default: false 
    Description: Determines whether lambda function event is enabled   


  PolicyPrefix:
    Type: String
    Default: DevRatingsBackend 
    Description: Policy statements must be AlphaNumeric   

  ProjectName:
    Type: String
    Default: dev-ratings-backend


Resources:


  LambdaCodeBucket:
    Properties:
      BucketName: !Join ['-', [ !Ref ProjectName, !Ref BucketName ]]
      Tags:
        -
          Key: keep
          Value: 'yes'
        -
          Key: reason
          Value: !Join ['-', [ !Ref ProjectName, 'lambda-function']]
    Type: 'AWS::S3::Bucket'


###############################
#DynamoDb table to store ratings
#primary key is a composite of the
#show name and time
###############################
  RatingsTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        -
          AttributeName: 'RATINGS_OCCURRED_ON'
          AttributeType: 'S'
        -
          AttributeName: 'TIME'
          AttributeType: 'S'
        -
          AttributeName: 'SHOW'
          AttributeType: 'S'
        -
          AttributeName: 'YEAR'
          AttributeType: 'N'


    #On demand dynamodb
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        -
          AttributeName: 'RATINGS_OCCURRED_ON'
          KeyType: 'HASH'
        -
          AttributeName: 'TIME'
          KeyType: 'RANGE'

      GlobalSecondaryIndexes: 
      #index where all attributes are projected with GSI1_PK as PK
      #and RATINGS_OCCURRED_ON as sort key
        - 
          IndexName: 'SHOW_ACCESS'
          KeySchema: 
            - 
              AttributeName: 'SHOW'
              KeyType: 'HASH'
            - 
              AttributeName: 'RATINGS_OCCURRED_ON'
              KeyType: 'RANGE'

          #project all attributes
          Projection: 
            ProjectionType: 'ALL'
      #index designed for aggregation of data with GSI2_PK
      #as PK and GSI1_PK as sort key
        - 
          IndexName: 'YEAR_ACCESS'
          KeySchema: 
            - 
              AttributeName: 'YEAR'
              KeyType: 'HASH'
            - 
              AttributeName: 'RATINGS_OCCURRED_ON'
              KeyType: 'RANGE'

          #GSI Keys and partition and sort key 
          #for limited storage space
          Projection: 
            ProjectionType: 'ALL'

      #Automated backup for the last 35 days
      PointInTimeRecoverySpecification: 
        PointInTimeRecoveryEnabled: true

      SSESpecification:
          SSEEnabled: true
      TableName: !Ref DynamoDbTableName
      Tags:
        -
          Key: keep
          Value: 'yes'
        -
          Key: reason
          Value: !Join ['-', [ !Ref ProjectName, 'dynamodb']]

###############################
#DynamoDb table to store show names and analytics about toonami ratings
###############################
  showNamesTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        -
          AttributeName: 'PK'
          AttributeType: 'S'
        -
          AttributeName: 'SK'
          AttributeType: 'S'

    #On demand dynamodb
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        -
          AttributeName: 'PK'
          KeyType: 'HASH'
        -
          AttributeName: 'SK'
          KeyType: 'RANGE'
      #Automated backup for the last 35 days
      PointInTimeRecoverySpecification: 
        PointInTimeRecoveryEnabled: true

      SSESpecification:
          SSEEnabled: true
      TableName: !Sub '${environPrefix}_toonami_analytics'
      Tags:
        -
          Key: gitrepo
          Value: !Ref ProjectName
        -
          Key: keep
          Value: 'yes'
        -
          Key: reason
          Value: !Join ['-', [ !Ref ProjectName, 'dynamodb']]

        
